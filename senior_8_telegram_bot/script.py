import asyncio
import logging
import sys

# –Ü–º–ø–æ—Ä—Ç–∏ –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ aiogram
from aiogram import Bot, Dispatcher, types, F  # F - –¥–ª—è –º–∞–≥—ñ—á–Ω–∏—Ö —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import Message

# from aiogram.utils.markdown import hbold # –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)

# --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
# –í–ê–ñ–õ–ò–í–û: –ù–Ü–ö–û–õ–ò –Ω–µ –∑–±–µ—Ä—ñ–≥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ –≤ –∫–æ–¥—ñ –¥–ª—è —Ä–µ–∞–ª—å–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤!
# –ö—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ —Ñ–∞–π–ª–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó.
BOT_TOKEN = "YOUR_BOT_TOKEN"  # !!! –ó–ê–ú–Ü–ù–Ü–¢–¨ –ù–ê –í–ê–® –°–ü–†–ê–í–ñ–ù–Ü–ô –¢–û–ö–ï–ù !!!

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–æ—Ç–∞ —Ç–∞ –î–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---
# –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –ë–æ—Ç–∞. parse_mode=ParseMode.HTML –¥–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ HTML-—Ç–µ–≥–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É.
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
# –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –î–∏—Å–ø–µ—Ç—á–µ—Ä–∞. –í—ñ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –æ–±—Ä–æ–±–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.
dp = Dispatcher()


# --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (Handlers) ---

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(CommandStart())
async def handle_start(message: Message):
    """
    –¶–µ–π –æ–±—Ä–æ–±–Ω–∏–∫ —Ä–µ–∞–≥—É—î –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    """
    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    user_name = message.from_user.full_name
    # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ HTML —Ç–µ–≥–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è.
    await message.answer(
        f"–ü—Ä–∏–≤—ñ—Ç, <b>{user_name}</b>! üëã\n–Ø –ø—Ä–æ—Å—Ç–∏–π –µ—Ö–æ-–±–æ—Ç –Ω–∞ aiogram 3.\n–ù–∞–¥—ñ—à–ª–∏ /help, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ.")


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /help
@dp.message(Command("help"))
async def handle_help(message: Message):
    """
    –¶–µ–π –æ–±—Ä–æ–±–Ω–∏–∫ —Ä–µ–∞–≥—É—î –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
    """
    # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –¥–æ–≤—ñ–¥–∫–∏
    help_text = (
        "<b>–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
        "/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –±—É–¥—å-—è–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —ñ —è –π–æ–≥–æ –ø–æ–≤—Ç–æ—Ä—é."
    )
    await message.answer(help_text)


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–º–∞—î –±—É—Ç–∏ –≤ –∫—ñ–Ω—Ü—ñ)
# F.text - —Ü–µ "–º–∞–≥—ñ—á–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", —è–∫–∏–π —Å–ø—Ä–∞—Ü—å–æ–≤—É—î, —è–∫—â–æ –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ —î —Ç–µ–∫—Å—Ç
@dp.message(F.text)
async def echo_text_message(message: Message):
    """
    –¶–µ–π –æ–±—Ä–æ–±–Ω–∏–∫ –ª–æ–≤–∏—Ç—å –±—É–¥—å-—è–∫—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –Ω–µ —î –∫–æ–º–∞–Ω–¥–∞–º–∏,
    –≤–∏–∑–Ω–∞—á–µ–Ω–∏–º–∏ –≤–∏—â–µ, —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —ó—Ö –Ω–∞–∑–∞–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
    """
    try:
        # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ —Ç–∏–º –∂–µ —Ç–µ–∫—Å—Ç–æ–º
        await message.answer(f"–í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}")
    except Exception as e:
        # –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É –µ—Ö–æ: {e}")
        await message.answer("–û–π, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤–∞—à–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –±–µ–∑ —Ç–µ–∫—Å—Ç—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ñ–æ—Ç–æ, —Å—Ç—ñ–∫–µ—Ä–∏)
# –¶–µ–π –æ–±—Ä–æ–±–Ω–∏–∫ –º–∞—î –π—Ç–∏ –ø—ñ—Å–ª—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@dp.message()
async def echo_other_types(message: Message):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.
    """
    await message.answer("–Ø –æ—Ç—Ä–∏–º–∞–≤ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∞–ª–µ –≤–º—ñ—é –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏ –ª–∏—à–µ —Ç–µ–∫—Å—Ç.")


# --- –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ ---
async def main() -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.
    """
    # –ü–æ—á–∏–Ω–∞—î–º–æ –ø—Ä–æ—Ü–µ—Å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å –≤—ñ–¥ Telegram (polling)
    # skip_updates=True - —ñ–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –Ω–∞–∫–æ–ø–∏—á–∏–ª–∏—Å—å, –ø–æ–∫–∏ –±–æ—Ç –±—É–≤ –≤–∏–º–∫–Ω–µ–Ω–∏–π
    print("–ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
    await dp.start_polling(bot, skip_updates=True)


# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É ---
if __name__ == "__main__":
    # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è, —â–æ–± –±–∞—á–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–æ–±–æ—Ç—É –±–æ—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—ñ
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–æ–ª–æ–≤–Ω—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é main()
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        # –û–±—Ä–æ–±–∫–∞ –∑—É–ø–∏–Ω–∫–∏ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Ctrl+C
        print("–ë–æ—Ç–∞ –∑—É–ø–∏–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É.")
    except Exception as e:
        logging.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}", exc_info=True)
